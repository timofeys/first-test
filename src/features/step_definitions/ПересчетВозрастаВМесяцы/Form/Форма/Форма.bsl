//начало текста модуля

#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ДатаРожденияЧеловекаРавна(Парам01)","ДатаРожденияЧеловекаРавна","Допустим дата рождения человека равна 12.10.2000");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"СегодняРавно(Парам01)","СегодняРавно","и сегодня равно 22.09.2016");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВозрастВМесяцахБудетРавен(Парам01)","ВозрастВМесяцахРавен","Тогда возраст в месяцах будет равен 191");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение("Объект");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Допустим дата рождения человека равна 12.10.2000
//@ДатаРожденияЧеловекаРавна(Парам01)
Процедура ДатаРожденияЧеловекаРавна(Парам01) Экспорт
	Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
	Контекст.Вставить("ДатаРождения",Парам01);
КонецПроцедуры

&НаКлиенте
//и сегодня равно 22.09.2016
//@СегодняРавно(Парам01)
Процедура СегодняРавно(Парам01) Экспорт
	Ванесса.ПосмотретьЗначение(Парам01,Истина);
	//ВызватьИсключение "Не реализовано.";
	Контекст.Вставить("Сегодня",Парам01);
КонецПроцедуры

&НаКлиенте
//и сегодня равно 22.09.2016
//@СегодняРавно(Парам01)
Процедура ВозрастВМесяцахРавен(Парам01) Экспорт
	Результат =  НайтиВозраст(Контекст.ДатаРождения,Контекст.Сегодня);
Если НЕ Результат = Парам01 Тогда
	ВызватьИсключение ("Результат расчитан не верно");
КонецЕсли;	
	Ванесса.ПосмотретьЗначение(Парам01,Истина);
//	ВызватьИсключение "Не реализовано.";
КонецПроцедуры

&НаСервере
Функция НайтиВозраст(ДатаРожденя,Сегодня) Экспорт
Результат = ОбщийМодуль1.ПолучитьВозрастЧеловекаНаДату(ДатаРожденя,Сегодня);	
Возврат Результат;
КонецФункции	

//окончание текста модуля