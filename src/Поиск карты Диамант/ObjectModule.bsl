Перем Параметры Экспорт;

Процедура СформироватьВывод(ТабДок) Экспорт
	НомерКарты = КЦСценарнаяобработкаДиалогов.ПолучитьЗначениеПараметраСеанса(Параметры, "Номер полиса");
	ЗаданаКарта = НЕ ЗначениеЗаполнено(НомерКарты);
	ГосНомер = КЦСценарнаяобработкаДиалогов.ПолучитьЗначениеПараметраСеанса(Параметры, "Гос номер ТС");
	ВидКарты = КЦСценарнаяобработкаДиалогов.ПолучитьЗначениеПараметраСеанса(Параметры, "Вид полиса");
	Заказчик = КЦСценарнаяобработкаДиалогов.ПолучитьЗначениеПараметраСеанса(Параметры , "Заказчик");
	ЗаданГосНомер = НЕ ЗначениеЗаполнено(ГосНомер);	
	
	//КлючНомерКарты = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Номер карты");
	//КлючКарта= КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Найденная карта");
	//КлючНомерПолиса= КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Номер полиса");
	//КлючДатаНачала = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Дата начала действия карты");
	//КлючДатаЗаключенияДоговораСтрахования = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Дата заключения договора страхования");
	//КлючОкончания = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Дата окончания действия карты");
	//КлючОкончанияПолис = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Дата окончания действия полиса");
	//КлючАктивируется = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Карта подлежит активации");
	//КлючАктивирована = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Карта активирована");
	//КлючДействует = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Карта действует");
	КлючГосНомер = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Гос номер ТС");
	КлючФИОКлиента = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("ФИО для поиска карты");
	КлючЦветТС = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Цвет ТС");
	КлючМаркаТС = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Марка ТС");
	КлючМодельТС = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Модель ТС");
	КлючМарка = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Марка и модель в карте");
	КлючПримечание = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Примечание в карте");
	КлючУслуги = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Действующие услуги по карте");	
	КлючФИО = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Страхователь");	
	КлючФИОВладельца = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("ФИО владельца");
	КлючФИОПредставитель = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Представитель");
	
	КлючНачальныеДанные = КЦСценарнаяобработкаДиалогов.СформироватьКлюч("Изначальные данные поиска");
	
	Макет = ПолучитьМакет("Отчет");
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1000
	|	КартыПолисы.Наименование,
	|	КартыПолисы.Ссылка КАК Карта,
	|	КартыПолисы.МаркаМодель,
	|	КартыПолисы.ДействуетС,
	|	КартыПолисы.ДействуетДо,
	|	КартыПолисы.ПрограммаОбслуживания,
	|	КартыПолисы.Активируется,
	|	КартыПолисы.Примечание,
	|	КартыПолисы.ГосНомер,
	|	КартыПолисы.Цвет,
	|	КартыПолисы.ФИО
	|ИЗ
	|	Справочник.КартыПолисы КАК КартыПолисы
	|ГДЕ
	|	КартыПолисы.ПометкаУдаления = ЛОЖЬ
	|	И КартыПолисы.Контрагент = &Заказчик
	|	И КартыПолисы.ВидКартыПолиса = &ВидКартыПолиса
	|	И (&ЗаданГосНомер
	|			ИЛИ КартыПолисы.ГосНомер ПОДОБНО &ГосНомер)
	|	И (&ЗаданаКарта
	|			ИЛИ КартыПолисы.Наименование ПОДОБНО &Наименование)";

	Запрос.УстановитьПараметр("Заказчик", Заказчик);
	Запрос.УстановитьПараметр("ВидКартыПолиса", ВидКарты);
	Запрос.УстановитьПараметр("Наименование", "%"+НомерКарты+"%");
	Запрос.УстановитьПараметр("ЗаданаКарта", ЗаданаКарта);
	Запрос.УстановитьПараметр("ЗаданГосНомер", ЗаданГосНомер);
	Запрос.УстановитьПараметр("ГосНомер", "%"+ГосНомер+"%");	
	Результат = Запрос.Выполнить();
    
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	ОбластьПодвалТаблицы = Макет.ПолучитьОбласть("ПодвалТаблицы");

	ТабДок.Очистить();
	ТабДок.Вывести(ОбластьШапкаТаблицы);

	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл
		МаркаСсылка =  Справочники.МаркиТС.ПустаяСсылка();
		МодельСсылка = Справочники.МоделиТС.ПустаяСсылка();
		Лица.ПолучитьМаркуМодель(Выборка.МаркаМодель, МаркаСсылка, МодельСсылка);
		СтруктураРасшифровки = Новый Структура();
		СтруктураРасшифровки.Вставить(КлючКарта, Выборка.Карта);
		СтруктураРасшифровки.Вставить(КлючГосНомер, Выборка.ГосНомер);
		СтруктураРасшифровки.Вставить(КлючМаркаТС, МаркаСсылка);
		СтруктураРасшифровки.Вставить(КлючМодельТС, МодельСсылка);
		СтруктураРасшифровки.Вставить(КлючЦветТС, Выборка.Цвет);
		СтруктураРасшифровки.Вставить(КлючНомерПолиса, Выборка.Наименование);
		СтруктураРасшифровки.Вставить(КлючНомерКарты, Выборка.Наименование);
		СтруктураРасшифровки.Вставить(КлючОкончания, Выборка.ДействуетДо);
		СтруктураРасшифровки.Вставить(КлючОкончанияПолис, Выборка.ДействуетДо);
		СтруктураРасшифровки.Вставить(КлючДатаЗаключенияДоговораСтрахования, Выборка.ДействуетС);
		СтруктураРасшифровки.Вставить(КлючФИО, Выборка.ФИО);
		СтруктураРасшифровки.Вставить(КлючФИОВладельца, Выборка.ФИО);
		СтруктураРасшифровки.Вставить(КлючФИОПредставитель, Выборка.ФИО);
		Услуги = "";
		
		СписокУслуг = РегистрыНакопления.УслугиПоКартамПолисам.Остатки(, Новый Структура("КартаПолис", Выборка.Карта));
		Для Каждого ТекУслуга Из СписокУслуг Цикл
			Услуги = ""+Услуги + Символы.ПС;
			Услуги = ""+Услуги + ТекУслуга.Услуга + " - " + ТекУслуга.Количество;
		КонецЦикла;
		Услуги = СокрЛП(Услуги);
		
		СтруктураРасшифровки.Вставить(КлючУслуги, Услуги);
		
		Если Не Выборка.Активируется Тогда
			Область = Макет.ПолучитьОбласть("НеАктивируется");
			Действует = Истина;
			Активирована = Ложь;
		ИначеЕсли Выборка.ДействуетС = '00010101' Тогда
			Область = Макет.ПолучитьОбласть("НеАктивирована");
			Действует = Ложь;
			Активирована = Ложь;
		ИначеЕсли Выборка.ДействуетС <= ТекущаяДата() И  Выборка.ДействуетДо >= ТекущаяДата() Тогда
			Область = Макет.ПолучитьОбласть("Действует");
			Действует = Истина;
			Активирована = Истина;
		Иначе
			Область = Макет.ПолучитьОбласть("НеДействует");
			Действует = Ложь;
			Активирована = Истина;
		КонецЕсли;
		
		СтруктураРасшифровки.Вставить(КлючАктивируется, Выборка.Активируется);
		СтруктураРасшифровки.Вставить(КлючАктивирована, Активирована);
		Область.Параметры.Расшифровка = СтруктураРасшифровки;
		
		Область.Параметры.Заполнить(Выборка);
		Область.Параметры.Заполнить(Выборка.карта);
		
		ТабДок.Вывести(Область, Выборка.Уровень());
	КонецЦикла;

	ТабДок.ЗакончитьАвтогруппировкуСтрок();
	ТабДок.Вывести(ОбластьПодвалТаблицы);
КонецПроцедуры
